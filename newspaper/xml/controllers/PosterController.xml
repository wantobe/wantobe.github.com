<krpano>
	
	<action name="go_comic">
		def(comic,object);
		if(%1 == 'true',
			def(comic.xmlpath, string, '%SWFPATH%/xml/scenes/MotionComicScene.xml');
			def(comic.scene, string, 'motionComic');
			,
			def(comic.xmlpath, string, '%SWFPATH%/xml/scenes/GalleryScene.xml');
			def(comic.scene, string, 'gallery');
		);
		if(%2,set(page,%2));
		select_btn_yse_no(
			loadpanoscene(get(comic.xmlpath),get(comic.scene),,REMOVESCENES,BLEND(0.5));
		);
	</action>
	
	
	<action name="go_home">
		select_btn_yse_no(loadpanoscene('%SWFPATH%/xml/scenes/IndexScene.xml','index',,,BLEND(0.5)));
	</action>
	
	<action name="back2last" type="javascript"><![CDATA[
		var comic_length = 0,
			last_motion = resolve('comic.last_motion'),
			last_data = resolve('comic.last_data');

		if(last_motion == 'false'){
			comic_length = gallery_data.length;
		}else{
			comic_length = motion_data.length;
		}
		krpano.set("motion_",last_motion);
		krpano.set("data_",last_data);
		KRPANO.call("go_comic",last_motion,comic_length-1);
		actions.delayedcall(1, "show_next_episode()");
		
	]]></action>
	
	<action name="poster_panel_init" type="javascript"><![CDATA[
		var show_back = args[1]=='true'?true:false;
		var styles = [
			{
				name:"previw_bg",
				url:"%SWFPATH%/img/index/preview_bg.png",
				depth:2500,
				zorder:2,
				scale:1.25
			},{
				name:"home_btn",
				url:"%SWFPATH%/img/home.png",
				width:120,
				height:"prop",
				ox:0,
				oy:600,
				onover:"tween(scale,1.2)",
				onout:"tween(scale,1.0)",
				onclick:"go_home()"
			},
			
			{
				name: 'back_album_btn',
				url:"%SWFPATH%/img/index/back_album.png",
				ox: 646,
				oy: -446,
				width:90,
				height:90,
				crop:"0|0|100|102",
				onovercrop:"0|102|100|102",
				onclick:"delete_episode()",
				vr_timeout:100,
				zorder:6,
				alpha: 0.8,
				visible:show_back,
				onclick:"back2last()",
			},{
				name:"poster",
				url:resolve("poster_"),
				width:742,
				height:496,
				oy:-40,
				scale:0.8
			},{
				name:"play_icon",
				url:"%SWFPATH%/img/index/play.png" ,
				width:150,
				height:"prop",
				scale:1,
				alpha:0.8,
				oy:-40,
				onover:"tween(scale,1.2)",
				onout:"tween(scale,1)",
				onclick:"hotspot[previewBtn_0].onclick"
			},/*{
				name:"preview_righttop_bg",
				width:534,
				height:496,
				edge:"lefttop",
				ox:110,
				oy:-438,
				alpha:0.8,
				background:"#131a21",
				border:"1 cyan"
			},*/{
				name:"preview_righttop_title",
				width:600,
				height:86,
				oy:210,
				text:resolve("title_"),
				fontSize:36,
				color:"#000",
				textAlign:"left"
			},/*{
				name:"preview_righttop_author",
				width:456,
				height:40,
				edge:"lefttop",
				ox:148,
				oy:-296,
				text:"漫画作者　　"+resolve("author_"),
				textAlign:"left",
				fontSize:28
			},{
				name:"preview_righttop_category",
				width:456,
				height:40,
				edge:"lefttop",
				ox:148,
				oy:-250,
				text:"分类标签　　"+resolve("category_"),
				textAlign:"left",
				fontSize:28
			},*/{
				name:"preview_righttop_update",
				width:456,
				height:40,
				edge:"lefttop",
				ox:50,
				oy:-344,
				text:date2day("update_date_"),
				color:"#000",
				textAlign:"left",
				fontSize:28
			},/*{
				name:"preview_righttop_brief",
				width:180,
				height:40,
				edge:"lefttop",
				ox:148,
				oy:-150,
				text:"专辑简介",
				textAlign:"left",
				fontSize:28
			},*/{
				name:"preview_righttop_brief_p",
				width:600,
				height:230,
				edge:"top",
				oy:220,
				color:"#000",
				p:resolve("brief_"),
				textAlign:"left",
				lineHeight:1.5,
				fontSize:20
			}/*,{
				name:"preview_bottom_bg",
				width:1280,
				height:330,
				edge:"top",
				ox:0,
				oy:122,
				alpha:0.8,
				background:"#131a21",
				border:"1 cyan"
			},{
				name:"preview_bottom_title",
				width:400,
				height:40,
				edge:"lefttop",
				ox:-640,
				oy:80,
				text:"专辑列表(更新到第"+resolve("episodes_")+"话)",
				textAlign:"left",
				fontSize:30
			},{
				name: 'arrow_right',
				ox: 570,
				oy:280,
				url: "%SWFPATH%/img/page_handler/page_arrow.png",
				alpha: 0.5,
				enabled: true,
				scale: 1,
				width: 50,
				height: 150,
				rotate: 0,
				onclick: "",
				vr_timeout: 300,
				crop: "290|0|287|746",
				onovercrop: "0|0|287|746"
			},{
				name: 'arrow_left',
				ox: 570,
				oy: -280,
				url: "%SWFPATH%/img/page_handler/page_arrow.png",
				alpha: 0.5,
				enabled: true,
				scale: 1,
				width: 50,
				height: 150,
				rotate: 180,
				onclick: "",
				vr_timeout: 300,
				crop: "290|0|287|746",
				onovercrop: "0|0|287|746"
			}*/
		];
		
		KRPANO.call('create_hotspot',styles);
		
		krpano.call("episode_list(get(episodes_),80,80,white,#2f416b,#308ab2,cyan)");

		function date2day(str) {
			var date = resolve(str);
			function isNum(element){
				return !isNaN(element)
			}
			if(date.split("-").every(isNum)) {
				date = date + " 星期"+["日", "一", "二", "三", "四", "五", "六"][new Date(date.replace(/-/g, "/")).getDay()];
			}
			return date
		}

	]]></action>
	
	<action name="episode_list" type="javascript"><![CDATA[
		var canvas = document.createElement("canvas"),
			context = canvas.getContext('2d'),
			length = args[1],//总话数
			width = args[2],//按钮的宽
			height = args[3],//按钮的高
			color = args[4],//文字颜色
			bgColor0 = args[5],
			bgColor1 = args[6],
			borColor = args[7];
			
		width = parseInt(width);
		height = parseInt(height);
		length = parseInt(length);
		
		
		function createBtnBg(){
			
			canvas.width = width*2;
			canvas.height = height*length;
			
			context.textBaseline = 'middle';
			context.textAlign = 'center';
			context.font = 'normal ' + height*0.5 + 'px Microsoft YaHei';
			
			for(var i = 0; i < 2*length; i++){
				var cols = i%2,
					rows = parseInt(i/2);
					start_x = (width)*cols,
					start_y =  (height)*rows;
					
				drawRect(
					start_x, start_y,
					width, height,
					rows+1,
					color, 
					cols>0 ? bgColor1 : bgColor0,
					borColor
				);
			}
			return canvas.toDataURL("image/png");
		}
		
		function drawRect(x,y,w,h,text,color,bg,bor){
			//context.globalAlpha = alpha;
			context.fillStyle = bg;
			context.fillRect(x, y, w, h);
			context.strokeStyle = bor;
			context.lineWidth = 1;
			context.strokeRect(x, y, w, h);
			context.fillStyle = color;
			context.fillText(text, x+w/2, y+h/2);
		}
		
		var dataUrl = createBtnBg();
		
		/*KRPANO.call("create_hotspot",{
			name:"btns_test",
			url:dataUrl
		});*/
		
		var comic_id = resolve("id_"),
			comic_history = localStorage.getItem("id_"+comic_id);
		
		if(comic_history){
			comic_history = comic_history.split(",")
		}else{
			comic_history = new Array(length);
		}
		
		for(var i = 0; i < length%30; i++){
			var lines = parseInt(i/10);
			KRPANO.call("create_hotspot",{
				name:"previewBtn_"+i,
				url:dataUrl,
				width:80,
				height:80,
				zorder:6,
				depth:2000,
				edge:"top",
				ox:-450+100*(i%10),
				oy:144 + lines*100+lines,
				alpha:0.7,
				crop:setCrop(i, comic_history[i]),
				onover:"tween(alpha,1)",
				onout:"tween(alpha,0.7)",
				onclick: listItemClick(i)
			});
		}
		
		function setCrop(i, done){
			var crop = "";
			if(done){
				crop = "0|"+80*i+"|80|80";
			}else{
				crop = "80|"+80*i+"|80|80";
			}
			return crop;
		}
		
		function listItemClick(i){
			var old_url = resolve("data_"),
				new_url = old_url.split(".json").join(""),
				str = "";
				
			new_url = new_url.replace(/_\d+$/,"");
			//console.log("old_url:", old_url);
			
			if(i>0){
				str = "set(data_,"+new_url+"_"+i+".json);";
			}else{
				str = "set(data_,"+new_url+".json);";
			}
			str += "episode_history("+i+","+length+");"
					+"set_history();"
					+"set(page,0);"
					+"go_comic(get(motion_));";

			//console.log(str);
			return str;
		}
	]]></action>
	
	


</krpano>