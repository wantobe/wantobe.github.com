<krpano>
	<action name="next_episode" type="javascript"><![CDATA[
		
		var current_episode = parseInt(window.episode),
			episodes_length = resolve('episodes_'),
			mode = 0;
		if(current_episode < episodes_length-1){
			mode = 1;
		}else{
			mode = 0;
		}
		
		var tipText = [
				'没有更多内容了',
				'已经是最后一页了'
			],
			nextEpisodeObj = [{
				name: 'episode_bg',
				url: "%SWFPATH%/img/page_handler/next_episode_bg.png",
				scale: 1.6,
				width:840,
				height:600,
				zorder:6
			},{
				name: 'episode_text',
				text:tipText[mode],
				width:800,
				height:80,
				oy: -240,
				zorder:6
			},{
				name: 'episode_close',
				url:"%SWFPATH%/img/page_handler/episode_close.png",
				ox: 600,
				oy: -400,
				width:120,
				height:120,
				crop:"0|0|100|102",
				onovercrop:"0|102|100|102",
				onclick:"delete_episode()",
				vr_timeout:100,
				zorder:6
			},{
				name:"episode_recomend_0",
				url:"%SWFPATH%/img/static_comic/chaoxiyou/001.jpg",
				ox:-400,
				oy:230,
				width:152,
				height:202,
				scale:1.62,
				zorder:6
			},{
				name:"episode_recomend_1",
				url:"%SWFPATH%/img/static_comic/chaoxiyou/001.jpg",
				ox:-113,
				oy:230,
				width:152,
				height:202,
				scale:1.62,
				zorder:6
			},{
				name:"episode_recomend_2",
				url:"%SWFPATH%/img/static_comic/chaoxiyou/001.jpg",
				ox:173,
				oy:230,
				width:152,
				height:202,
				scale:1.62,
				zorder:6
			},{
				name:"episode_recomend_3",
				url:"%SWFPATH%/img/static_comic/chaoxiyou/001.jpg",
				ox:465,
				oy:230,
				width:152,
				height:202,
				scale:1.62,
				zorder:6
			},{
				name:"episode_btn",
				url:"%SWFPATH%/img/page_handler/episode_next.png",
				width:230,
				height:90,
				ox:500,
				oy:-50,
				crop:"0|0|230|90",
				onovercrop:"0|90|230|90",
				onclick:"select_btn_yse_no(load_next_episode())",
				zorder:6
			}];
			

		KRPANO.call("create_hotspot", nextEpisodeObj);
		
		//设置下一话的按钮是否可见
		krpano.set("hotspot[episode_btn].visible", mode==0?false:true);
		
		//备份当前动画类型/data路径
		actions.def("comic.last_motion","string",resolve("motion_"));
		actions.def("comic.last_data","string",resolve("data_"));
		
		require(["json!../data/recommend.json?callbak=define"],
			function(list) {
				var clickStr = '';
				for(var i in list){
					for(var j in list[i]){
						if(j == 'thumb'){
							//设置推荐专辑的缩略图
							krpano.set("hotspot[episode_recomend_"+i+"].url", list[i][j]);
						}
						clickStr += "set("+j+"_,"+list[i][j]+");"
					}
					
					krpano.set("hotspot[episode_recomend_"+i+"].onclick",
						//进入专辑页
						"select_btn_yse_no("
							+clickStr
							+"loadpanoscene(%SWFPATH%/xml/scenes/PosterScene.xml,poster_panel,ep_back=true,REMOVESCENES,BLEND(0.5));"
						+")"
					)
				}
			}
		);
	
		krpano.set("hotspot[arrow_left].visible",false);
		krpano.set("hotspot[arrow_right].visible",false);
		krpano.set("hotspot[atuoBtn].visible",false);
		krpano.call('switch_hotspots_visible(bar_)');
	
		
	]]></action>
	
	<action name="load_next_episode" type="javascript">
		<![CDATA[
			var current_episode = parseInt(window.episode),
				current_data_url = resolve("data_");
				
			window.episode = current_episode+1; 
			
			KRPANO.call("episode_history", window.episode);
			
			//本地数据和网络数据
			if(/.+\.json$/.test(current_data_url)){
				current_data_url = current_data_url.split(".json").join("");
				current_data_url = current_data_url.replace(/_\d+$/,"");
				load_data(current_data_url+"_"+window.episode+".json");
			}else{
				//current_data_url = current_data_url+"?episode="+window.episode;
			}
			
			function load_data(url){
				require(["json!"+url+"?callbak=define"],
					function(page_data){
						var length = page_data.length;
						if(length>0){
							delete window.motion_data;
							delete window.gallery_data;
							if(resolve("xml.scene")=="gallery"){
								window.gallery_data = page_data;
								krpano.call("gallery(0,0,"+gallery_mode+")");
							}else if(resolve("xml.scene")=="motionComic"){
								window.motion_data = page_data;
								krpano.call("play_scene(0)");
							}
							krpano.call("delete_episode(); page_handler(1,"+length+");");
						}
					}
				);
			}

		]]>
	</action>
	
	<action name="delete_episode">
		delete_hotspots("episode_");
		set(hotspot[arrow_left].visible,true);
		set(hotspot[arrow_right].visible,true);
		set(hotspot[arrow_left].enabled,true);
		set(hotspot[arrow_right].enabled,true);
		tween(hotspot[arrow_left].alpha|hotspot[arrow_right].alpha,1|1);
		set(hotspot[atuoBtn].visible,true);
		switch_hotspots_visible(bar_);
	</action>
	
</krpano>